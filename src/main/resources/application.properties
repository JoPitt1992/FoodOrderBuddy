# === Server ===
server.port=${PORT:8080}
logging.level.org.atmosphere = warn
spring.mustache.check-template-location = false

# === Vaadin ===
vaadin.launch-browser=true
vaadin.allowed-packages = com.vaadin,org.vaadin,com.example.application

# === Hibernate / JPA ===
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization = true
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# === PostgreSQL via Cloud SQL Socket Factory ===

#spring.datasource.url=jdbc:postgresql:///postgres?cloudSqlInstance=foodorderbuddy:europe-west1:foodorderbuddy-db&socketFactory=com.google.cloud.sql.postgres.SocketFactory
#spring.datasource.username=postgres
#spring.datasource.password=foodorderbuddy123
#spring.datasource.driver-class-name=org.postgresql.Driver

#Test mit TCP anstelle Cloud SQL
spring.datasource.url=jdbc:postgresql://35.205.245.25:5432/foodorderbuddy
spring.datasource.username=postgres
spring.datasource.password=foodorderbuddy123
spring.datasource.driver-class-name=org.postgresql.Driver

